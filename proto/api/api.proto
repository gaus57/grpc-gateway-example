syntax = "proto3";

option go_package = "github.com/gaus57/grpc-gateway/generate-go/api";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-swagger/options/annotations.proto";

// Результат пинга.
message PingResult {
    // Сообщение.
    string message = 1;
}

// Элемент.
message Item {
    // Идентификатор.
    int64 id = 1;
    // Название.
    string name = 2;
}

// Параметры создания элемента.
message CreateItemParams {
    // Элемент.
    Item item = 1;
}

// Результат создания элемента.
message CreateItemResult {
    // Элемент.
    Item item = 1;
}

// Параметры получения элемента.
message GetItemParams {
    // Идентификатор.
    int64 id = 1;
}

// Результат получения элемента.
message GetItemResult {
    // Элемент.
    Item item = 1;
}

// Параметры обновления элемента.
message UpdateItemParams {
    // Элемент.
    Item item = 1;
}

// Результат обновления элемента.
message UpdateItemResult {
    // Элемент.
    Item item = 1;
}

// Параметры удаления элемента.
message DeleteItemParams {
    // Элемент.
    int64 id = 1;
}

// Апи v0.
service ApiV0 {
    // Пинг.
    rpc Ping(google.protobuf.Empty) returns (PingResult) {
        option (google.api.http) = {
            get: "/v0/ping"
        };
    }

    // Создать элемент.
    rpc CreateItem(CreateItemParams) returns (CreateItemResult) {
        option (google.api.http) = {
            post: "/v0/item",
            body: "*"
        };
    }

    // Получить элемент.
    rpc GetItem(GetItemParams) returns (GetItemResult) {
        option (google.api.http) = {
            get: "/v0/item/{id}"
        };
    }

    // Обновить элемент.
    rpc UpdateItem(UpdateItemParams) returns (UpdateItemResult) {
        option (google.api.http) = {
            put: "/v0/item",
            body: "*"
        };
    }

    // Удалить элемент.
    rpc DeleteItem(DeleteItemParams) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v0/item/{id}"
        };
    }
}

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
    info: {
        title: "Пример grpc-gateway сервиса"
        version: "1.0"
        contact: {
            name: "Кузнецов Олег"
            url: "https://github.com/gaus57"
            email: "gaus_oleg@mail.ru"
        };
    };
    schemes: [HTTP,HTTPS]
    consumes: "application/json"
    produces: "application/json"
    responses: {
        key: "404"
        value: {
            description: "Возвращается когда результат отсутсвует."
            schema: {
                json_schema: {
                    type: STRING
                };
            };
        };
    };
};
